# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from . import utilities, tables

class SSHKey(pulumi.CustomResource):
    created: pulumi.Output[str]
    """
    The timestamp for when the SSH key was created
    """
    fingerprint: pulumi.Output[str]
    """
    The fingerprint of the SSH key
    """
    name: pulumi.Output[str]
    """
    The name of the SSH key for identification
    """
    public_key: pulumi.Output[str]
    """
    The public key. If this is a file, it
    can be read using the file interpolation function
    """
    updated: pulumi.Output[str]
    """
    The timestamp for the last time the SSH key was updated
    """
    def __init__(__self__, __name__, __opts__=None, name=None, public_key=None):
        """
        Provides a Packet SSH key resource to allow you manage SSH
        keys on your account. All SSH keys on your account are loaded on
        all new devices, they do not have to be explicitly declared on
        device creation.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] name: The name of the SSH key for identification
        :param pulumi.Input[str] public_key: The public key. If this is a file, it
               can be read using the file interpolation function
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not name:
            raise TypeError('Missing required property name')
        __props__['name'] = name

        if not public_key:
            raise TypeError('Missing required property public_key')
        __props__['public_key'] = public_key

        __props__['created'] = None
        __props__['fingerprint'] = None
        __props__['updated'] = None

        super(SSHKey, __self__).__init__(
            'packet:index/sSHKey:SSHKey',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

