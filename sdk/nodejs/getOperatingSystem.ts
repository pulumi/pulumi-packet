// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get Packet Operating System image.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as packet from "@pulumi/packet";
 * 
 * const example = pulumi.output(packet.getOperatingSystem({
 *     distro: "coreos",
 *     name: "Container Linux",
 *     provisionableOn: "c1.small.x86",
 *     version: "alpha",
 * }));
 * const server = new packet.Device("server", {
 *     billingCycle: "hourly",
 *     facilities: ["ewr1"],
 *     hostname: "tf.coreos2",
 *     operatingSystem: example.id,
 *     plan: "c1.small.x86",
 *     projectId: local_project_id,
 * });
 * ```
 */
export function getOperatingSystem(args?: GetOperatingSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatingSystemResult> {
    args = args || {};
    return pulumi.runtime.invoke("packet:index/getOperatingSystem:getOperatingSystem", {
        "distro": args.distro,
        "name": args.name,
        "provisionableOn": args.provisionableOn,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getOperatingSystem.
 */
export interface GetOperatingSystemArgs {
    /**
     * Name of the OS distribution.
     */
    readonly distro?: string;
    /**
     * Name or part of the name of the distribution. Case insensitive.
     */
    readonly name?: string;
    /**
     * Plan name.
     */
    readonly provisionableOn?: string;
    /**
     * Version of the distribution
     */
    readonly version?: string;
}

/**
 * A collection of values returned by getOperatingSystem.
 */
export interface GetOperatingSystemResult {
    readonly distro?: string;
    readonly name?: string;
    readonly provisionableOn?: string;
    /**
     * Operating system slug (same as `id`)
     */
    readonly slug: string;
    readonly version?: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
