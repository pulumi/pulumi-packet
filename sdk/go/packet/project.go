// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package packet

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Packet project resource to allow you manage devices
// in your projects.
type Project struct {
	s *pulumi.ResourceState
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOpt) (*Project, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bgpConfig"] = nil
		inputs["name"] = nil
		inputs["organizationId"] = nil
		inputs["paymentMethodId"] = nil
	} else {
		inputs["bgpConfig"] = args.BgpConfig
		inputs["name"] = args.Name
		inputs["organizationId"] = args.OrganizationId
		inputs["paymentMethodId"] = args.PaymentMethodId
	}
	inputs["created"] = nil
	inputs["updated"] = nil
	s, err := ctx.RegisterResource("packet:index/project:Project", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Project{s: s}, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ProjectState, opts ...pulumi.ResourceOpt) (*Project, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bgpConfig"] = state.BgpConfig
		inputs["created"] = state.Created
		inputs["name"] = state.Name
		inputs["organizationId"] = state.OrganizationId
		inputs["paymentMethodId"] = state.PaymentMethodId
		inputs["updated"] = state.Updated
	}
	s, err := ctx.ReadResource("packet:index/project:Project", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Project{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Project) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Project) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Optional BGP settings. Refer to [Packet guide for BGP](https://support.packet.com/kb/articles/bgp).
func (r *Project) BgpConfig() *pulumi.Output {
	return r.s.State["bgpConfig"]
}

// The timestamp for when the project was created
func (r *Project) Created() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["created"])
}

// The name of the project on Packet.net
func (r *Project) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The UUID of organization under which you want to create the project. If you leave it out, the project will be create under your the default organization of your account.
func (r *Project) OrganizationId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["organizationId"])
}

// The UUID of payment method for this project. The payment method and the project need to belong to the same organization (passed with `organization_id`, or default).
func (r *Project) PaymentMethodId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["paymentMethodId"])
}

// The timestamp for the last time the project was updated
func (r *Project) Updated() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["updated"])
}

// Input properties used for looking up and filtering Project resources.
type ProjectState struct {
	// Optional BGP settings. Refer to [Packet guide for BGP](https://support.packet.com/kb/articles/bgp).
	BgpConfig interface{}
	// The timestamp for when the project was created
	Created interface{}
	// The name of the project on Packet.net
	Name interface{}
	// The UUID of organization under which you want to create the project. If you leave it out, the project will be create under your the default organization of your account.
	OrganizationId interface{}
	// The UUID of payment method for this project. The payment method and the project need to belong to the same organization (passed with `organization_id`, or default).
	PaymentMethodId interface{}
	// The timestamp for the last time the project was updated
	Updated interface{}
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Optional BGP settings. Refer to [Packet guide for BGP](https://support.packet.com/kb/articles/bgp).
	BgpConfig interface{}
	// The name of the project on Packet.net
	Name interface{}
	// The UUID of organization under which you want to create the project. If you leave it out, the project will be create under your the default organization of your account.
	OrganizationId interface{}
	// The UUID of payment method for this project. The payment method and the project need to belong to the same organization (passed with `organization_id`, or default).
	PaymentMethodId interface{}
}
