// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package packet

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to get Packet Operating System image.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-packet/sdk/v2/go/packet"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "Container Linux"
// 		opt1 := "coreos"
// 		opt2 := "alpha"
// 		opt3 := "c1.small.x86"
// 		example, err := packet.GetOperatingSystem(ctx, &packet.GetOperatingSystemArgs{
// 			Name:            &opt0,
// 			Distro:          &opt1,
// 			Version:         &opt2,
// 			ProvisionableOn: &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = packet.NewDevice(ctx, "server", &packet.DeviceArgs{
// 			Hostname: pulumi.String("tf.coreos2"),
// 			Plan:     pulumi.String("c1.small.x86"),
// 			Facilities: pulumi.StringArray{
// 				pulumi.String("ewr1"),
// 			},
// 			OperatingSystem: pulumi.String(example.Id),
// 			BillingCycle:    pulumi.String("hourly"),
// 			ProjectId:       pulumi.String(local.Project_id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetOperatingSystem(ctx *pulumi.Context, args *GetOperatingSystemArgs, opts ...pulumi.InvokeOption) (*GetOperatingSystemResult, error) {
	var rv GetOperatingSystemResult
	err := ctx.Invoke("packet:index/getOperatingSystem:getOperatingSystem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOperatingSystem.
type GetOperatingSystemArgs struct {
	// Name of the OS distribution.
	Distro *string `pulumi:"distro"`
	// Name or part of the name of the distribution. Case insensitive.
	Name *string `pulumi:"name"`
	// Plan name.
	ProvisionableOn *string `pulumi:"provisionableOn"`
	// Version of the distribution
	Version *string `pulumi:"version"`
}

// A collection of values returned by getOperatingSystem.
type GetOperatingSystemResult struct {
	Distro *string `pulumi:"distro"`
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	Name            *string `pulumi:"name"`
	ProvisionableOn *string `pulumi:"provisionableOn"`
	// Operating system slug (same as `id`)
	Slug    string  `pulumi:"slug"`
	Version *string `pulumi:"version"`
}
