// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package packet

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DeviceIpAddress struct {
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr           *int     `pulumi:"cidr"`
	ReservationIds []string `pulumi:"reservationIds"`
	// One of [`privateIpv4`, `publicIpv4`, `publicIpv6`]
	Type string `pulumi:"type"`
}

// DeviceIpAddressInput is an input type that accepts DeviceIpAddressArgs and DeviceIpAddressOutput values.
// You can construct a concrete instance of `DeviceIpAddressInput` via:
//
// 		 DeviceIpAddressArgs{...}
//
type DeviceIpAddressInput interface {
	pulumi.Input

	ToDeviceIpAddressOutput() DeviceIpAddressOutput
	ToDeviceIpAddressOutputWithContext(context.Context) DeviceIpAddressOutput
}

type DeviceIpAddressArgs struct {
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr           pulumi.IntPtrInput      `pulumi:"cidr"`
	ReservationIds pulumi.StringArrayInput `pulumi:"reservationIds"`
	// One of [`privateIpv4`, `publicIpv4`, `publicIpv6`]
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeviceIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceIpAddress)(nil)).Elem()
}

func (i DeviceIpAddressArgs) ToDeviceIpAddressOutput() DeviceIpAddressOutput {
	return i.ToDeviceIpAddressOutputWithContext(context.Background())
}

func (i DeviceIpAddressArgs) ToDeviceIpAddressOutputWithContext(ctx context.Context) DeviceIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceIpAddressOutput)
}

// DeviceIpAddressArrayInput is an input type that accepts DeviceIpAddressArray and DeviceIpAddressArrayOutput values.
// You can construct a concrete instance of `DeviceIpAddressArrayInput` via:
//
// 		 DeviceIpAddressArray{ DeviceIpAddressArgs{...} }
//
type DeviceIpAddressArrayInput interface {
	pulumi.Input

	ToDeviceIpAddressArrayOutput() DeviceIpAddressArrayOutput
	ToDeviceIpAddressArrayOutputWithContext(context.Context) DeviceIpAddressArrayOutput
}

type DeviceIpAddressArray []DeviceIpAddressInput

func (DeviceIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceIpAddress)(nil)).Elem()
}

func (i DeviceIpAddressArray) ToDeviceIpAddressArrayOutput() DeviceIpAddressArrayOutput {
	return i.ToDeviceIpAddressArrayOutputWithContext(context.Background())
}

func (i DeviceIpAddressArray) ToDeviceIpAddressArrayOutputWithContext(ctx context.Context) DeviceIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceIpAddressArrayOutput)
}

type DeviceIpAddressOutput struct{ *pulumi.OutputState }

func (DeviceIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceIpAddress)(nil)).Elem()
}

func (o DeviceIpAddressOutput) ToDeviceIpAddressOutput() DeviceIpAddressOutput {
	return o
}

func (o DeviceIpAddressOutput) ToDeviceIpAddressOutputWithContext(ctx context.Context) DeviceIpAddressOutput {
	return o
}

// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
func (o DeviceIpAddressOutput) Cidr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceIpAddress) *int { return v.Cidr }).(pulumi.IntPtrOutput)
}

func (o DeviceIpAddressOutput) ReservationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceIpAddress) []string { return v.ReservationIds }).(pulumi.StringArrayOutput)
}

// One of [`privateIpv4`, `publicIpv4`, `publicIpv6`]
func (o DeviceIpAddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceIpAddress) string { return v.Type }).(pulumi.StringOutput)
}

type DeviceIpAddressArrayOutput struct{ *pulumi.OutputState }

func (DeviceIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceIpAddress)(nil)).Elem()
}

func (o DeviceIpAddressArrayOutput) ToDeviceIpAddressArrayOutput() DeviceIpAddressArrayOutput {
	return o
}

func (o DeviceIpAddressArrayOutput) ToDeviceIpAddressArrayOutputWithContext(ctx context.Context) DeviceIpAddressArrayOutput {
	return o
}

func (o DeviceIpAddressArrayOutput) Index(i pulumi.IntInput) DeviceIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceIpAddress {
		return vs[0].([]DeviceIpAddress)[vs[1].(int)]
	}).(DeviceIpAddressOutput)
}

type DeviceNetwork struct {
	// IPv4 or IPv6 address string
	Address *string `pulumi:"address"`
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr *int `pulumi:"cidr"`
	// IP version - "4" or "6"
	Family *int `pulumi:"family"`
	// address of router
	Gateway *string `pulumi:"gateway"`
	// whether the address is routable from the Internet
	Public *bool `pulumi:"public"`
}

// DeviceNetworkInput is an input type that accepts DeviceNetworkArgs and DeviceNetworkOutput values.
// You can construct a concrete instance of `DeviceNetworkInput` via:
//
// 		 DeviceNetworkArgs{...}
//
type DeviceNetworkInput interface {
	pulumi.Input

	ToDeviceNetworkOutput() DeviceNetworkOutput
	ToDeviceNetworkOutputWithContext(context.Context) DeviceNetworkOutput
}

type DeviceNetworkArgs struct {
	// IPv4 or IPv6 address string
	Address pulumi.StringPtrInput `pulumi:"address"`
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr pulumi.IntPtrInput `pulumi:"cidr"`
	// IP version - "4" or "6"
	Family pulumi.IntPtrInput `pulumi:"family"`
	// address of router
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// whether the address is routable from the Internet
	Public pulumi.BoolPtrInput `pulumi:"public"`
}

func (DeviceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceNetwork)(nil)).Elem()
}

func (i DeviceNetworkArgs) ToDeviceNetworkOutput() DeviceNetworkOutput {
	return i.ToDeviceNetworkOutputWithContext(context.Background())
}

func (i DeviceNetworkArgs) ToDeviceNetworkOutputWithContext(ctx context.Context) DeviceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceNetworkOutput)
}

// DeviceNetworkArrayInput is an input type that accepts DeviceNetworkArray and DeviceNetworkArrayOutput values.
// You can construct a concrete instance of `DeviceNetworkArrayInput` via:
//
// 		 DeviceNetworkArray{ DeviceNetworkArgs{...} }
//
type DeviceNetworkArrayInput interface {
	pulumi.Input

	ToDeviceNetworkArrayOutput() DeviceNetworkArrayOutput
	ToDeviceNetworkArrayOutputWithContext(context.Context) DeviceNetworkArrayOutput
}

type DeviceNetworkArray []DeviceNetworkInput

func (DeviceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceNetwork)(nil)).Elem()
}

func (i DeviceNetworkArray) ToDeviceNetworkArrayOutput() DeviceNetworkArrayOutput {
	return i.ToDeviceNetworkArrayOutputWithContext(context.Background())
}

func (i DeviceNetworkArray) ToDeviceNetworkArrayOutputWithContext(ctx context.Context) DeviceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceNetworkArrayOutput)
}

type DeviceNetworkOutput struct{ *pulumi.OutputState }

func (DeviceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceNetwork)(nil)).Elem()
}

func (o DeviceNetworkOutput) ToDeviceNetworkOutput() DeviceNetworkOutput {
	return o
}

func (o DeviceNetworkOutput) ToDeviceNetworkOutputWithContext(ctx context.Context) DeviceNetworkOutput {
	return o
}

// IPv4 or IPv6 address string
func (o DeviceNetworkOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
func (o DeviceNetworkOutput) Cidr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *int { return v.Cidr }).(pulumi.IntPtrOutput)
}

// IP version - "4" or "6"
func (o DeviceNetworkOutput) Family() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *int { return v.Family }).(pulumi.IntPtrOutput)
}

// address of router
func (o DeviceNetworkOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// whether the address is routable from the Internet
func (o DeviceNetworkOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

type DeviceNetworkArrayOutput struct{ *pulumi.OutputState }

func (DeviceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceNetwork)(nil)).Elem()
}

func (o DeviceNetworkArrayOutput) ToDeviceNetworkArrayOutput() DeviceNetworkArrayOutput {
	return o
}

func (o DeviceNetworkArrayOutput) ToDeviceNetworkArrayOutputWithContext(ctx context.Context) DeviceNetworkArrayOutput {
	return o
}

func (o DeviceNetworkArrayOutput) Index(i pulumi.IntInput) DeviceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceNetwork {
		return vs[0].([]DeviceNetwork)[vs[1].(int)]
	}).(DeviceNetworkOutput)
}

type DevicePort struct {
	// Whether this port is part of a bond in bonded network setup
	// * `projectId`- The ID of the project the device belongs to
	Bonded *bool `pulumi:"bonded"`
	// ID of the port
	Id *string `pulumi:"id"`
	// MAC address assigned to the port
	Mac *string `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`)
	Name *string `pulumi:"name"`
	// One of [`privateIpv4`, `publicIpv4`, `publicIpv6`]
	Type *string `pulumi:"type"`
}

// DevicePortInput is an input type that accepts DevicePortArgs and DevicePortOutput values.
// You can construct a concrete instance of `DevicePortInput` via:
//
// 		 DevicePortArgs{...}
//
type DevicePortInput interface {
	pulumi.Input

	ToDevicePortOutput() DevicePortOutput
	ToDevicePortOutputWithContext(context.Context) DevicePortOutput
}

type DevicePortArgs struct {
	// Whether this port is part of a bond in bonded network setup
	// * `projectId`- The ID of the project the device belongs to
	Bonded pulumi.BoolPtrInput `pulumi:"bonded"`
	// ID of the port
	Id pulumi.StringPtrInput `pulumi:"id"`
	// MAC address assigned to the port
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One of [`privateIpv4`, `publicIpv4`, `publicIpv6`]
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DevicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePort)(nil)).Elem()
}

func (i DevicePortArgs) ToDevicePortOutput() DevicePortOutput {
	return i.ToDevicePortOutputWithContext(context.Background())
}

func (i DevicePortArgs) ToDevicePortOutputWithContext(ctx context.Context) DevicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePortOutput)
}

// DevicePortArrayInput is an input type that accepts DevicePortArray and DevicePortArrayOutput values.
// You can construct a concrete instance of `DevicePortArrayInput` via:
//
// 		 DevicePortArray{ DevicePortArgs{...} }
//
type DevicePortArrayInput interface {
	pulumi.Input

	ToDevicePortArrayOutput() DevicePortArrayOutput
	ToDevicePortArrayOutputWithContext(context.Context) DevicePortArrayOutput
}

type DevicePortArray []DevicePortInput

func (DevicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePort)(nil)).Elem()
}

func (i DevicePortArray) ToDevicePortArrayOutput() DevicePortArrayOutput {
	return i.ToDevicePortArrayOutputWithContext(context.Background())
}

func (i DevicePortArray) ToDevicePortArrayOutputWithContext(ctx context.Context) DevicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePortArrayOutput)
}

type DevicePortOutput struct{ *pulumi.OutputState }

func (DevicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePort)(nil)).Elem()
}

func (o DevicePortOutput) ToDevicePortOutput() DevicePortOutput {
	return o
}

func (o DevicePortOutput) ToDevicePortOutputWithContext(ctx context.Context) DevicePortOutput {
	return o
}

// Whether this port is part of a bond in bonded network setup
// * `projectId`- The ID of the project the device belongs to
func (o DevicePortOutput) Bonded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevicePort) *bool { return v.Bonded }).(pulumi.BoolPtrOutput)
}

// ID of the port
func (o DevicePortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// MAC address assigned to the port
func (o DevicePortOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Name of the port (e.g. `eth0`, or `bond0`)
func (o DevicePortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One of [`privateIpv4`, `publicIpv4`, `publicIpv6`]
func (o DevicePortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DevicePortArrayOutput struct{ *pulumi.OutputState }

func (DevicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePort)(nil)).Elem()
}

func (o DevicePortArrayOutput) ToDevicePortArrayOutput() DevicePortArrayOutput {
	return o
}

func (o DevicePortArrayOutput) ToDevicePortArrayOutputWithContext(ctx context.Context) DevicePortArrayOutput {
	return o
}

func (o DevicePortArrayOutput) Index(i pulumi.IntInput) DevicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevicePort {
		return vs[0].([]DevicePort)[vs[1].(int)]
	}).(DevicePortOutput)
}

type ProjectBgpConfig struct {
	// Autonomous System Numer for local BGP deployment
	Asn int `pulumi:"asn"`
	// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
	DeploymentType string `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server
	MaxPrefix *int `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum)
	Md5 *string `pulumi:"md5"`
	// status of BGP configuration in the project
	Status *string `pulumi:"status"`
}

// ProjectBgpConfigInput is an input type that accepts ProjectBgpConfigArgs and ProjectBgpConfigOutput values.
// You can construct a concrete instance of `ProjectBgpConfigInput` via:
//
// 		 ProjectBgpConfigArgs{...}
//
type ProjectBgpConfigInput interface {
	pulumi.Input

	ToProjectBgpConfigOutput() ProjectBgpConfigOutput
	ToProjectBgpConfigOutputWithContext(context.Context) ProjectBgpConfigOutput
}

type ProjectBgpConfigArgs struct {
	// Autonomous System Numer for local BGP deployment
	Asn pulumi.IntInput `pulumi:"asn"`
	// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server
	MaxPrefix pulumi.IntPtrInput `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum)
	Md5 pulumi.StringPtrInput `pulumi:"md5"`
	// status of BGP configuration in the project
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProjectBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBgpConfig)(nil)).Elem()
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigOutput() ProjectBgpConfigOutput {
	return i.ToProjectBgpConfigOutputWithContext(context.Background())
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigOutputWithContext(ctx context.Context) ProjectBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBgpConfigOutput)
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return i.ToProjectBgpConfigPtrOutputWithContext(context.Background())
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBgpConfigOutput).ToProjectBgpConfigPtrOutputWithContext(ctx)
}

// ProjectBgpConfigPtrInput is an input type that accepts ProjectBgpConfigArgs, ProjectBgpConfigPtr and ProjectBgpConfigPtrOutput values.
// You can construct a concrete instance of `ProjectBgpConfigPtrInput` via:
//
// 		 ProjectBgpConfigArgs{...}
//
//  or:
//
// 		 nil
//
type ProjectBgpConfigPtrInput interface {
	pulumi.Input

	ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput
	ToProjectBgpConfigPtrOutputWithContext(context.Context) ProjectBgpConfigPtrOutput
}

type projectBgpConfigPtrType ProjectBgpConfigArgs

func ProjectBgpConfigPtr(v *ProjectBgpConfigArgs) ProjectBgpConfigPtrInput {
	return (*projectBgpConfigPtrType)(v)
}

func (*projectBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBgpConfig)(nil)).Elem()
}

func (i *projectBgpConfigPtrType) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return i.ToProjectBgpConfigPtrOutputWithContext(context.Background())
}

func (i *projectBgpConfigPtrType) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBgpConfigPtrOutput)
}

type ProjectBgpConfigOutput struct{ *pulumi.OutputState }

func (ProjectBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBgpConfig)(nil)).Elem()
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigOutput() ProjectBgpConfigOutput {
	return o
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigOutputWithContext(ctx context.Context) ProjectBgpConfigOutput {
	return o
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return o.ToProjectBgpConfigPtrOutputWithContext(context.Background())
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *ProjectBgpConfig {
		return &v
	}).(ProjectBgpConfigPtrOutput)
}

// Autonomous System Numer for local BGP deployment
func (o ProjectBgpConfigOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v ProjectBgpConfig) int { return v.Asn }).(pulumi.IntOutput)
}

// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
func (o ProjectBgpConfigOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectBgpConfig) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// The maximum number of route filters allowed per server
func (o ProjectBgpConfigOutput) MaxPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *int { return v.MaxPrefix }).(pulumi.IntPtrOutput)
}

// Password for BGP session in plaintext (not a checksum)
func (o ProjectBgpConfigOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *string { return v.Md5 }).(pulumi.StringPtrOutput)
}

// status of BGP configuration in the project
func (o ProjectBgpConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProjectBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBgpConfig)(nil)).Elem()
}

func (o ProjectBgpConfigPtrOutput) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return o
}

func (o ProjectBgpConfigPtrOutput) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return o
}

func (o ProjectBgpConfigPtrOutput) Elem() ProjectBgpConfigOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) ProjectBgpConfig { return *v }).(ProjectBgpConfigOutput)
}

// Autonomous System Numer for local BGP deployment
func (o ProjectBgpConfigPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Asn
	}).(pulumi.IntPtrOutput)
}

// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
func (o ProjectBgpConfigPtrOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentType
	}).(pulumi.StringPtrOutput)
}

// The maximum number of route filters allowed per server
func (o ProjectBgpConfigPtrOutput) MaxPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPrefix
	}).(pulumi.IntPtrOutput)
}

// Password for BGP session in plaintext (not a checksum)
func (o ProjectBgpConfigPtrOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Md5
	}).(pulumi.StringPtrOutput)
}

// status of BGP configuration in the project
func (o ProjectBgpConfigPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SpotMarketRequestInstanceParameters struct {
	AlwaysPxe        *string  `pulumi:"alwaysPxe"`
	BillingCycle     string   `pulumi:"billingCycle"`
	Description      *string  `pulumi:"description"`
	Features         []string `pulumi:"features"`
	Hostname         string   `pulumi:"hostname"`
	Locked           *string  `pulumi:"locked"`
	OperatingSystem  string   `pulumi:"operatingSystem"`
	Plan             string   `pulumi:"plan"`
	ProjectSshKeys   []string `pulumi:"projectSshKeys"`
	TermintationTime *string  `pulumi:"termintationTime"`
	UserSshKeys      []string `pulumi:"userSshKeys"`
	Userdata         *string  `pulumi:"userdata"`
}

// SpotMarketRequestInstanceParametersInput is an input type that accepts SpotMarketRequestInstanceParametersArgs and SpotMarketRequestInstanceParametersOutput values.
// You can construct a concrete instance of `SpotMarketRequestInstanceParametersInput` via:
//
// 		 SpotMarketRequestInstanceParametersArgs{...}
//
type SpotMarketRequestInstanceParametersInput interface {
	pulumi.Input

	ToSpotMarketRequestInstanceParametersOutput() SpotMarketRequestInstanceParametersOutput
	ToSpotMarketRequestInstanceParametersOutputWithContext(context.Context) SpotMarketRequestInstanceParametersOutput
}

type SpotMarketRequestInstanceParametersArgs struct {
	AlwaysPxe        pulumi.StringPtrInput   `pulumi:"alwaysPxe"`
	BillingCycle     pulumi.StringInput      `pulumi:"billingCycle"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Features         pulumi.StringArrayInput `pulumi:"features"`
	Hostname         pulumi.StringInput      `pulumi:"hostname"`
	Locked           pulumi.StringPtrInput   `pulumi:"locked"`
	OperatingSystem  pulumi.StringInput      `pulumi:"operatingSystem"`
	Plan             pulumi.StringInput      `pulumi:"plan"`
	ProjectSshKeys   pulumi.StringArrayInput `pulumi:"projectSshKeys"`
	TermintationTime pulumi.StringPtrInput   `pulumi:"termintationTime"`
	UserSshKeys      pulumi.StringArrayInput `pulumi:"userSshKeys"`
	Userdata         pulumi.StringPtrInput   `pulumi:"userdata"`
}

func (SpotMarketRequestInstanceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersOutput() SpotMarketRequestInstanceParametersOutput {
	return i.ToSpotMarketRequestInstanceParametersOutputWithContext(context.Background())
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMarketRequestInstanceParametersOutput)
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return i.ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Background())
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMarketRequestInstanceParametersOutput).ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx)
}

// SpotMarketRequestInstanceParametersPtrInput is an input type that accepts SpotMarketRequestInstanceParametersArgs, SpotMarketRequestInstanceParametersPtr and SpotMarketRequestInstanceParametersPtrOutput values.
// You can construct a concrete instance of `SpotMarketRequestInstanceParametersPtrInput` via:
//
// 		 SpotMarketRequestInstanceParametersArgs{...}
//
//  or:
//
// 		 nil
//
type SpotMarketRequestInstanceParametersPtrInput interface {
	pulumi.Input

	ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput
	ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Context) SpotMarketRequestInstanceParametersPtrOutput
}

type spotMarketRequestInstanceParametersPtrType SpotMarketRequestInstanceParametersArgs

func SpotMarketRequestInstanceParametersPtr(v *SpotMarketRequestInstanceParametersArgs) SpotMarketRequestInstanceParametersPtrInput {
	return (*spotMarketRequestInstanceParametersPtrType)(v)
}

func (*spotMarketRequestInstanceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (i *spotMarketRequestInstanceParametersPtrType) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return i.ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Background())
}

func (i *spotMarketRequestInstanceParametersPtrType) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMarketRequestInstanceParametersPtrOutput)
}

type SpotMarketRequestInstanceParametersOutput struct{ *pulumi.OutputState }

func (SpotMarketRequestInstanceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersOutput() SpotMarketRequestInstanceParametersOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return o.ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Background())
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *SpotMarketRequestInstanceParameters {
		return &v
	}).(SpotMarketRequestInstanceParametersPtrOutput)
}
func (o SpotMarketRequestInstanceParametersOutput) AlwaysPxe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.AlwaysPxe }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) BillingCycle() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.BillingCycle }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.Features }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Locked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.Locked }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.Plan }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) ProjectSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.ProjectSshKeys }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) TermintationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.TermintationTime }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) UserSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.UserSshKeys }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Userdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.Userdata }).(pulumi.StringPtrOutput)
}

type SpotMarketRequestInstanceParametersPtrOutput struct{ *pulumi.OutputState }

func (SpotMarketRequestInstanceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (o SpotMarketRequestInstanceParametersPtrOutput) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersPtrOutput) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Elem() SpotMarketRequestInstanceParametersOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) SpotMarketRequestInstanceParameters { return *v }).(SpotMarketRequestInstanceParametersOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) AlwaysPxe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.AlwaysPxe
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) BillingCycle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.BillingCycle
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.Features
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Locked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.Locked
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) ProjectSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.ProjectSshKeys
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) TermintationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.TermintationTime
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) UserSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.UserSshKeys
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Userdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.Userdata
	}).(pulumi.StringPtrOutput)
}

type VolumeAttachmentType struct {
	Href *string `pulumi:"href"`
}

// VolumeAttachmentTypeInput is an input type that accepts VolumeAttachmentTypeArgs and VolumeAttachmentTypeOutput values.
// You can construct a concrete instance of `VolumeAttachmentTypeInput` via:
//
// 		 VolumeAttachmentTypeArgs{...}
//
type VolumeAttachmentTypeInput interface {
	pulumi.Input

	ToVolumeAttachmentTypeOutput() VolumeAttachmentTypeOutput
	ToVolumeAttachmentTypeOutputWithContext(context.Context) VolumeAttachmentTypeOutput
}

type VolumeAttachmentTypeArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
}

func (VolumeAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeAttachmentType)(nil)).Elem()
}

func (i VolumeAttachmentTypeArgs) ToVolumeAttachmentTypeOutput() VolumeAttachmentTypeOutput {
	return i.ToVolumeAttachmentTypeOutputWithContext(context.Background())
}

func (i VolumeAttachmentTypeArgs) ToVolumeAttachmentTypeOutputWithContext(ctx context.Context) VolumeAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeAttachmentTypeOutput)
}

// VolumeAttachmentTypeArrayInput is an input type that accepts VolumeAttachmentTypeArray and VolumeAttachmentTypeArrayOutput values.
// You can construct a concrete instance of `VolumeAttachmentTypeArrayInput` via:
//
// 		 VolumeAttachmentTypeArray{ VolumeAttachmentTypeArgs{...} }
//
type VolumeAttachmentTypeArrayInput interface {
	pulumi.Input

	ToVolumeAttachmentTypeArrayOutput() VolumeAttachmentTypeArrayOutput
	ToVolumeAttachmentTypeArrayOutputWithContext(context.Context) VolumeAttachmentTypeArrayOutput
}

type VolumeAttachmentTypeArray []VolumeAttachmentTypeInput

func (VolumeAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeAttachmentType)(nil)).Elem()
}

func (i VolumeAttachmentTypeArray) ToVolumeAttachmentTypeArrayOutput() VolumeAttachmentTypeArrayOutput {
	return i.ToVolumeAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i VolumeAttachmentTypeArray) ToVolumeAttachmentTypeArrayOutputWithContext(ctx context.Context) VolumeAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeAttachmentTypeArrayOutput)
}

type VolumeAttachmentTypeOutput struct{ *pulumi.OutputState }

func (VolumeAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeAttachmentType)(nil)).Elem()
}

func (o VolumeAttachmentTypeOutput) ToVolumeAttachmentTypeOutput() VolumeAttachmentTypeOutput {
	return o
}

func (o VolumeAttachmentTypeOutput) ToVolumeAttachmentTypeOutputWithContext(ctx context.Context) VolumeAttachmentTypeOutput {
	return o
}

func (o VolumeAttachmentTypeOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeAttachmentType) *string { return v.Href }).(pulumi.StringPtrOutput)
}

type VolumeAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (VolumeAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeAttachmentType)(nil)).Elem()
}

func (o VolumeAttachmentTypeArrayOutput) ToVolumeAttachmentTypeArrayOutput() VolumeAttachmentTypeArrayOutput {
	return o
}

func (o VolumeAttachmentTypeArrayOutput) ToVolumeAttachmentTypeArrayOutputWithContext(ctx context.Context) VolumeAttachmentTypeArrayOutput {
	return o
}

func (o VolumeAttachmentTypeArrayOutput) Index(i pulumi.IntInput) VolumeAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeAttachmentType {
		return vs[0].([]VolumeAttachmentType)[vs[1].(int)]
	}).(VolumeAttachmentTypeOutput)
}

type VolumeSnapshotPolicy struct {
	SnapshotCount     int    `pulumi:"snapshotCount"`
	SnapshotFrequency string `pulumi:"snapshotFrequency"`
}

// VolumeSnapshotPolicyInput is an input type that accepts VolumeSnapshotPolicyArgs and VolumeSnapshotPolicyOutput values.
// You can construct a concrete instance of `VolumeSnapshotPolicyInput` via:
//
// 		 VolumeSnapshotPolicyArgs{...}
//
type VolumeSnapshotPolicyInput interface {
	pulumi.Input

	ToVolumeSnapshotPolicyOutput() VolumeSnapshotPolicyOutput
	ToVolumeSnapshotPolicyOutputWithContext(context.Context) VolumeSnapshotPolicyOutput
}

type VolumeSnapshotPolicyArgs struct {
	SnapshotCount     pulumi.IntInput    `pulumi:"snapshotCount"`
	SnapshotFrequency pulumi.StringInput `pulumi:"snapshotFrequency"`
}

func (VolumeSnapshotPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSnapshotPolicy)(nil)).Elem()
}

func (i VolumeSnapshotPolicyArgs) ToVolumeSnapshotPolicyOutput() VolumeSnapshotPolicyOutput {
	return i.ToVolumeSnapshotPolicyOutputWithContext(context.Background())
}

func (i VolumeSnapshotPolicyArgs) ToVolumeSnapshotPolicyOutputWithContext(ctx context.Context) VolumeSnapshotPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSnapshotPolicyOutput)
}

// VolumeSnapshotPolicyArrayInput is an input type that accepts VolumeSnapshotPolicyArray and VolumeSnapshotPolicyArrayOutput values.
// You can construct a concrete instance of `VolumeSnapshotPolicyArrayInput` via:
//
// 		 VolumeSnapshotPolicyArray{ VolumeSnapshotPolicyArgs{...} }
//
type VolumeSnapshotPolicyArrayInput interface {
	pulumi.Input

	ToVolumeSnapshotPolicyArrayOutput() VolumeSnapshotPolicyArrayOutput
	ToVolumeSnapshotPolicyArrayOutputWithContext(context.Context) VolumeSnapshotPolicyArrayOutput
}

type VolumeSnapshotPolicyArray []VolumeSnapshotPolicyInput

func (VolumeSnapshotPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeSnapshotPolicy)(nil)).Elem()
}

func (i VolumeSnapshotPolicyArray) ToVolumeSnapshotPolicyArrayOutput() VolumeSnapshotPolicyArrayOutput {
	return i.ToVolumeSnapshotPolicyArrayOutputWithContext(context.Background())
}

func (i VolumeSnapshotPolicyArray) ToVolumeSnapshotPolicyArrayOutputWithContext(ctx context.Context) VolumeSnapshotPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeSnapshotPolicyArrayOutput)
}

type VolumeSnapshotPolicyOutput struct{ *pulumi.OutputState }

func (VolumeSnapshotPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeSnapshotPolicy)(nil)).Elem()
}

func (o VolumeSnapshotPolicyOutput) ToVolumeSnapshotPolicyOutput() VolumeSnapshotPolicyOutput {
	return o
}

func (o VolumeSnapshotPolicyOutput) ToVolumeSnapshotPolicyOutputWithContext(ctx context.Context) VolumeSnapshotPolicyOutput {
	return o
}

func (o VolumeSnapshotPolicyOutput) SnapshotCount() pulumi.IntOutput {
	return o.ApplyT(func(v VolumeSnapshotPolicy) int { return v.SnapshotCount }).(pulumi.IntOutput)
}

func (o VolumeSnapshotPolicyOutput) SnapshotFrequency() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeSnapshotPolicy) string { return v.SnapshotFrequency }).(pulumi.StringOutput)
}

type VolumeSnapshotPolicyArrayOutput struct{ *pulumi.OutputState }

func (VolumeSnapshotPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeSnapshotPolicy)(nil)).Elem()
}

func (o VolumeSnapshotPolicyArrayOutput) ToVolumeSnapshotPolicyArrayOutput() VolumeSnapshotPolicyArrayOutput {
	return o
}

func (o VolumeSnapshotPolicyArrayOutput) ToVolumeSnapshotPolicyArrayOutputWithContext(ctx context.Context) VolumeSnapshotPolicyArrayOutput {
	return o
}

func (o VolumeSnapshotPolicyArrayOutput) Index(i pulumi.IntInput) VolumeSnapshotPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeSnapshotPolicy {
		return vs[0].([]VolumeSnapshotPolicy)[vs[1].(int)]
	}).(VolumeSnapshotPolicyOutput)
}

type GetDeviceNetwork struct {
	// IPv4 or IPv6 address string
	Address string `pulumi:"address"`
	// Bit length of the network mask of the address
	Cidr int `pulumi:"cidr"`
	// IP version - "4" or "6"
	Family int `pulumi:"family"`
	// Address of router
	Gateway string `pulumi:"gateway"`
	// Whether the address is routable from the Internet
	Public bool `pulumi:"public"`
}

// GetDeviceNetworkInput is an input type that accepts GetDeviceNetworkArgs and GetDeviceNetworkOutput values.
// You can construct a concrete instance of `GetDeviceNetworkInput` via:
//
// 		 GetDeviceNetworkArgs{...}
//
type GetDeviceNetworkInput interface {
	pulumi.Input

	ToGetDeviceNetworkOutput() GetDeviceNetworkOutput
	ToGetDeviceNetworkOutputWithContext(context.Context) GetDeviceNetworkOutput
}

type GetDeviceNetworkArgs struct {
	// IPv4 or IPv6 address string
	Address pulumi.StringInput `pulumi:"address"`
	// Bit length of the network mask of the address
	Cidr pulumi.IntInput `pulumi:"cidr"`
	// IP version - "4" or "6"
	Family pulumi.IntInput `pulumi:"family"`
	// Address of router
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Whether the address is routable from the Internet
	Public pulumi.BoolInput `pulumi:"public"`
}

func (GetDeviceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceNetwork)(nil)).Elem()
}

func (i GetDeviceNetworkArgs) ToGetDeviceNetworkOutput() GetDeviceNetworkOutput {
	return i.ToGetDeviceNetworkOutputWithContext(context.Background())
}

func (i GetDeviceNetworkArgs) ToGetDeviceNetworkOutputWithContext(ctx context.Context) GetDeviceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceNetworkOutput)
}

// GetDeviceNetworkArrayInput is an input type that accepts GetDeviceNetworkArray and GetDeviceNetworkArrayOutput values.
// You can construct a concrete instance of `GetDeviceNetworkArrayInput` via:
//
// 		 GetDeviceNetworkArray{ GetDeviceNetworkArgs{...} }
//
type GetDeviceNetworkArrayInput interface {
	pulumi.Input

	ToGetDeviceNetworkArrayOutput() GetDeviceNetworkArrayOutput
	ToGetDeviceNetworkArrayOutputWithContext(context.Context) GetDeviceNetworkArrayOutput
}

type GetDeviceNetworkArray []GetDeviceNetworkInput

func (GetDeviceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceNetwork)(nil)).Elem()
}

func (i GetDeviceNetworkArray) ToGetDeviceNetworkArrayOutput() GetDeviceNetworkArrayOutput {
	return i.ToGetDeviceNetworkArrayOutputWithContext(context.Background())
}

func (i GetDeviceNetworkArray) ToGetDeviceNetworkArrayOutputWithContext(ctx context.Context) GetDeviceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceNetworkArrayOutput)
}

type GetDeviceNetworkOutput struct{ *pulumi.OutputState }

func (GetDeviceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceNetwork)(nil)).Elem()
}

func (o GetDeviceNetworkOutput) ToGetDeviceNetworkOutput() GetDeviceNetworkOutput {
	return o
}

func (o GetDeviceNetworkOutput) ToGetDeviceNetworkOutputWithContext(ctx context.Context) GetDeviceNetworkOutput {
	return o
}

// IPv4 or IPv6 address string
func (o GetDeviceNetworkOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceNetwork) string { return v.Address }).(pulumi.StringOutput)
}

// Bit length of the network mask of the address
func (o GetDeviceNetworkOutput) Cidr() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceNetwork) int { return v.Cidr }).(pulumi.IntOutput)
}

// IP version - "4" or "6"
func (o GetDeviceNetworkOutput) Family() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceNetwork) int { return v.Family }).(pulumi.IntOutput)
}

// Address of router
func (o GetDeviceNetworkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceNetwork) string { return v.Gateway }).(pulumi.StringOutput)
}

// Whether the address is routable from the Internet
func (o GetDeviceNetworkOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceNetwork) bool { return v.Public }).(pulumi.BoolOutput)
}

type GetDeviceNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceNetwork)(nil)).Elem()
}

func (o GetDeviceNetworkArrayOutput) ToGetDeviceNetworkArrayOutput() GetDeviceNetworkArrayOutput {
	return o
}

func (o GetDeviceNetworkArrayOutput) ToGetDeviceNetworkArrayOutputWithContext(ctx context.Context) GetDeviceNetworkArrayOutput {
	return o
}

func (o GetDeviceNetworkArrayOutput) Index(i pulumi.IntInput) GetDeviceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceNetwork {
		return vs[0].([]GetDeviceNetwork)[vs[1].(int)]
	}).(GetDeviceNetworkOutput)
}

type GetDevicePort struct {
	// Whether this port is part of a bond in bonded network setup
	Bonded bool `pulumi:"bonded"`
	// ID of the port
	Id string `pulumi:"id"`
	// MAC address assigned to the port
	Mac string `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`)
	Name string `pulumi:"name"`
	// Type of the port (e.g. `NetworkPort` or `NetworkBondPort`)
	Type string `pulumi:"type"`
}

// GetDevicePortInput is an input type that accepts GetDevicePortArgs and GetDevicePortOutput values.
// You can construct a concrete instance of `GetDevicePortInput` via:
//
// 		 GetDevicePortArgs{...}
//
type GetDevicePortInput interface {
	pulumi.Input

	ToGetDevicePortOutput() GetDevicePortOutput
	ToGetDevicePortOutputWithContext(context.Context) GetDevicePortOutput
}

type GetDevicePortArgs struct {
	// Whether this port is part of a bond in bonded network setup
	Bonded pulumi.BoolInput `pulumi:"bonded"`
	// ID of the port
	Id pulumi.StringInput `pulumi:"id"`
	// MAC address assigned to the port
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`)
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the port (e.g. `NetworkPort` or `NetworkBondPort`)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDevicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicePort)(nil)).Elem()
}

func (i GetDevicePortArgs) ToGetDevicePortOutput() GetDevicePortOutput {
	return i.ToGetDevicePortOutputWithContext(context.Background())
}

func (i GetDevicePortArgs) ToGetDevicePortOutputWithContext(ctx context.Context) GetDevicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicePortOutput)
}

// GetDevicePortArrayInput is an input type that accepts GetDevicePortArray and GetDevicePortArrayOutput values.
// You can construct a concrete instance of `GetDevicePortArrayInput` via:
//
// 		 GetDevicePortArray{ GetDevicePortArgs{...} }
//
type GetDevicePortArrayInput interface {
	pulumi.Input

	ToGetDevicePortArrayOutput() GetDevicePortArrayOutput
	ToGetDevicePortArrayOutputWithContext(context.Context) GetDevicePortArrayOutput
}

type GetDevicePortArray []GetDevicePortInput

func (GetDevicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicePort)(nil)).Elem()
}

func (i GetDevicePortArray) ToGetDevicePortArrayOutput() GetDevicePortArrayOutput {
	return i.ToGetDevicePortArrayOutputWithContext(context.Background())
}

func (i GetDevicePortArray) ToGetDevicePortArrayOutputWithContext(ctx context.Context) GetDevicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicePortArrayOutput)
}

type GetDevicePortOutput struct{ *pulumi.OutputState }

func (GetDevicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicePort)(nil)).Elem()
}

func (o GetDevicePortOutput) ToGetDevicePortOutput() GetDevicePortOutput {
	return o
}

func (o GetDevicePortOutput) ToGetDevicePortOutputWithContext(ctx context.Context) GetDevicePortOutput {
	return o
}

// Whether this port is part of a bond in bonded network setup
func (o GetDevicePortOutput) Bonded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDevicePort) bool { return v.Bonded }).(pulumi.BoolOutput)
}

// ID of the port
func (o GetDevicePortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Id }).(pulumi.StringOutput)
}

// MAC address assigned to the port
func (o GetDevicePortOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of the port (e.g. `eth0`, or `bond0`)
func (o GetDevicePortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the port (e.g. `NetworkPort` or `NetworkBondPort`)
func (o GetDevicePortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Type }).(pulumi.StringOutput)
}

type GetDevicePortArrayOutput struct{ *pulumi.OutputState }

func (GetDevicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicePort)(nil)).Elem()
}

func (o GetDevicePortArrayOutput) ToGetDevicePortArrayOutput() GetDevicePortArrayOutput {
	return o
}

func (o GetDevicePortArrayOutput) ToGetDevicePortArrayOutputWithContext(ctx context.Context) GetDevicePortArrayOutput {
	return o
}

func (o GetDevicePortArrayOutput) Index(i pulumi.IntInput) GetDevicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicePort {
		return vs[0].([]GetDevicePort)[vs[1].(int)]
	}).(GetDevicePortOutput)
}

type GetProjectBgpConfig struct {
	// Autonomous System Numer for local BGP deployment
	Asn int `pulumi:"asn"`
	// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
	DeploymentType string `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server
	MaxPrefix int `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum)
	Md5 *string `pulumi:"md5"`
	// status of BGP configuration in the project
	Status string `pulumi:"status"`
}

// GetProjectBgpConfigInput is an input type that accepts GetProjectBgpConfigArgs and GetProjectBgpConfigOutput values.
// You can construct a concrete instance of `GetProjectBgpConfigInput` via:
//
// 		 GetProjectBgpConfigArgs{...}
//
type GetProjectBgpConfigInput interface {
	pulumi.Input

	ToGetProjectBgpConfigOutput() GetProjectBgpConfigOutput
	ToGetProjectBgpConfigOutputWithContext(context.Context) GetProjectBgpConfigOutput
}

type GetProjectBgpConfigArgs struct {
	// Autonomous System Numer for local BGP deployment
	Asn pulumi.IntInput `pulumi:"asn"`
	// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server
	MaxPrefix pulumi.IntInput `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum)
	Md5 pulumi.StringPtrInput `pulumi:"md5"`
	// status of BGP configuration in the project
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetProjectBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectBgpConfig)(nil)).Elem()
}

func (i GetProjectBgpConfigArgs) ToGetProjectBgpConfigOutput() GetProjectBgpConfigOutput {
	return i.ToGetProjectBgpConfigOutputWithContext(context.Background())
}

func (i GetProjectBgpConfigArgs) ToGetProjectBgpConfigOutputWithContext(ctx context.Context) GetProjectBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectBgpConfigOutput)
}

type GetProjectBgpConfigOutput struct{ *pulumi.OutputState }

func (GetProjectBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectBgpConfig)(nil)).Elem()
}

func (o GetProjectBgpConfigOutput) ToGetProjectBgpConfigOutput() GetProjectBgpConfigOutput {
	return o
}

func (o GetProjectBgpConfigOutput) ToGetProjectBgpConfigOutputWithContext(ctx context.Context) GetProjectBgpConfigOutput {
	return o
}

// Autonomous System Numer for local BGP deployment
func (o GetProjectBgpConfigOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) int { return v.Asn }).(pulumi.IntOutput)
}

// `private` or `public`, the `private` is likely to be usable immediately, the `public` will need to be review by Packet engineers
func (o GetProjectBgpConfigOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// The maximum number of route filters allowed per server
func (o GetProjectBgpConfigOutput) MaxPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) int { return v.MaxPrefix }).(pulumi.IntOutput)
}

// Password for BGP session in plaintext (not a checksum)
func (o GetProjectBgpConfigOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) *string { return v.Md5 }).(pulumi.StringPtrOutput)
}

// status of BGP configuration in the project
func (o GetProjectBgpConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) string { return v.Status }).(pulumi.StringOutput)
}

type GetVolumeSnapshotPolicy struct {
	SnapshotCount     int    `pulumi:"snapshotCount"`
	SnapshotFrequency string `pulumi:"snapshotFrequency"`
}

// GetVolumeSnapshotPolicyInput is an input type that accepts GetVolumeSnapshotPolicyArgs and GetVolumeSnapshotPolicyOutput values.
// You can construct a concrete instance of `GetVolumeSnapshotPolicyInput` via:
//
// 		 GetVolumeSnapshotPolicyArgs{...}
//
type GetVolumeSnapshotPolicyInput interface {
	pulumi.Input

	ToGetVolumeSnapshotPolicyOutput() GetVolumeSnapshotPolicyOutput
	ToGetVolumeSnapshotPolicyOutputWithContext(context.Context) GetVolumeSnapshotPolicyOutput
}

type GetVolumeSnapshotPolicyArgs struct {
	SnapshotCount     pulumi.IntInput    `pulumi:"snapshotCount"`
	SnapshotFrequency pulumi.StringInput `pulumi:"snapshotFrequency"`
}

func (GetVolumeSnapshotPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeSnapshotPolicy)(nil)).Elem()
}

func (i GetVolumeSnapshotPolicyArgs) ToGetVolumeSnapshotPolicyOutput() GetVolumeSnapshotPolicyOutput {
	return i.ToGetVolumeSnapshotPolicyOutputWithContext(context.Background())
}

func (i GetVolumeSnapshotPolicyArgs) ToGetVolumeSnapshotPolicyOutputWithContext(ctx context.Context) GetVolumeSnapshotPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeSnapshotPolicyOutput)
}

// GetVolumeSnapshotPolicyArrayInput is an input type that accepts GetVolumeSnapshotPolicyArray and GetVolumeSnapshotPolicyArrayOutput values.
// You can construct a concrete instance of `GetVolumeSnapshotPolicyArrayInput` via:
//
// 		 GetVolumeSnapshotPolicyArray{ GetVolumeSnapshotPolicyArgs{...} }
//
type GetVolumeSnapshotPolicyArrayInput interface {
	pulumi.Input

	ToGetVolumeSnapshotPolicyArrayOutput() GetVolumeSnapshotPolicyArrayOutput
	ToGetVolumeSnapshotPolicyArrayOutputWithContext(context.Context) GetVolumeSnapshotPolicyArrayOutput
}

type GetVolumeSnapshotPolicyArray []GetVolumeSnapshotPolicyInput

func (GetVolumeSnapshotPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeSnapshotPolicy)(nil)).Elem()
}

func (i GetVolumeSnapshotPolicyArray) ToGetVolumeSnapshotPolicyArrayOutput() GetVolumeSnapshotPolicyArrayOutput {
	return i.ToGetVolumeSnapshotPolicyArrayOutputWithContext(context.Background())
}

func (i GetVolumeSnapshotPolicyArray) ToGetVolumeSnapshotPolicyArrayOutputWithContext(ctx context.Context) GetVolumeSnapshotPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumeSnapshotPolicyArrayOutput)
}

type GetVolumeSnapshotPolicyOutput struct{ *pulumi.OutputState }

func (GetVolumeSnapshotPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeSnapshotPolicy)(nil)).Elem()
}

func (o GetVolumeSnapshotPolicyOutput) ToGetVolumeSnapshotPolicyOutput() GetVolumeSnapshotPolicyOutput {
	return o
}

func (o GetVolumeSnapshotPolicyOutput) ToGetVolumeSnapshotPolicyOutputWithContext(ctx context.Context) GetVolumeSnapshotPolicyOutput {
	return o
}

func (o GetVolumeSnapshotPolicyOutput) SnapshotCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVolumeSnapshotPolicy) int { return v.SnapshotCount }).(pulumi.IntOutput)
}

func (o GetVolumeSnapshotPolicyOutput) SnapshotFrequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeSnapshotPolicy) string { return v.SnapshotFrequency }).(pulumi.StringOutput)
}

type GetVolumeSnapshotPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetVolumeSnapshotPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumeSnapshotPolicy)(nil)).Elem()
}

func (o GetVolumeSnapshotPolicyArrayOutput) ToGetVolumeSnapshotPolicyArrayOutput() GetVolumeSnapshotPolicyArrayOutput {
	return o
}

func (o GetVolumeSnapshotPolicyArrayOutput) ToGetVolumeSnapshotPolicyArrayOutputWithContext(ctx context.Context) GetVolumeSnapshotPolicyArrayOutput {
	return o
}

func (o GetVolumeSnapshotPolicyArrayOutput) Index(i pulumi.IntInput) GetVolumeSnapshotPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumeSnapshotPolicy {
		return vs[0].([]GetVolumeSnapshotPolicy)[vs[1].(int)]
	}).(GetVolumeSnapshotPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(DeviceIpAddressOutput{})
	pulumi.RegisterOutputType(DeviceIpAddressArrayOutput{})
	pulumi.RegisterOutputType(DeviceNetworkOutput{})
	pulumi.RegisterOutputType(DeviceNetworkArrayOutput{})
	pulumi.RegisterOutputType(DevicePortOutput{})
	pulumi.RegisterOutputType(DevicePortArrayOutput{})
	pulumi.RegisterOutputType(ProjectBgpConfigOutput{})
	pulumi.RegisterOutputType(ProjectBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(SpotMarketRequestInstanceParametersOutput{})
	pulumi.RegisterOutputType(SpotMarketRequestInstanceParametersPtrOutput{})
	pulumi.RegisterOutputType(VolumeAttachmentTypeOutput{})
	pulumi.RegisterOutputType(VolumeAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(VolumeSnapshotPolicyOutput{})
	pulumi.RegisterOutputType(VolumeSnapshotPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceNetworkOutput{})
	pulumi.RegisterOutputType(GetDeviceNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetDevicePortOutput{})
	pulumi.RegisterOutputType(GetDevicePortArrayOutput{})
	pulumi.RegisterOutputType(GetProjectBgpConfigOutput{})
	pulumi.RegisterOutputType(GetVolumeSnapshotPolicyOutput{})
	pulumi.RegisterOutputType(GetVolumeSnapshotPolicyArrayOutput{})
}
