// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package packet

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Packet Block Storage Volume datasource to allow you to read existing volumes.
func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	var rv LookupVolumeResult
	err := ctx.Invoke("packet:index/getVolume:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolume.
type LookupVolumeArgs struct {
	// Name of volume for lookup
	Name *string `pulumi:"name"`
	// The ID the parent Packet project (for lookup by name)
	ProjectId *string `pulumi:"projectId"`
	VolumeId  *string `pulumi:"volumeId"`
}

// A collection of values returned by getVolume.
type LookupVolumeResult struct {
	// The billing cycle, defaults to hourly
	BillingCycle string `pulumi:"billingCycle"`
	Created      string `pulumi:"created"`
	Description  string `pulumi:"description"`
	// UUIDs of devices to which this volume is attached
	DeviceIds []string `pulumi:"deviceIds"`
	// The facility slug the volume resides in
	Facility string `pulumi:"facility"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether the volume is locked or not
	Locked bool `pulumi:"locked"`
	// The name of the volume
	// * `projectId ` - The project id the volume is in
	Name string `pulumi:"name"`
	// Performance plan the volume is on
	Plan      string `pulumi:"plan"`
	ProjectId string `pulumi:"projectId"`
	// The size in GB of the volume
	Size             int                       `pulumi:"size"`
	SnapshotPolicies []GetVolumeSnapshotPolicy `pulumi:"snapshotPolicies"`
	// The state of the volume
	State    string `pulumi:"state"`
	Updated  string `pulumi:"updated"`
	VolumeId string `pulumi:"volumeId"`
}
